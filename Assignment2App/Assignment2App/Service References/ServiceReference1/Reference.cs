//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Assignment2App.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cd_info", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1", IsReference=true)]
    public partial class cd_info : Assignment2App.ServiceReference1.EntityObject {
        
        private int IDField;
        
        private string artistField;
        
        private System.Nullable<System.Guid> guidField;
        
        private string titleField;
        
        private string yearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string artist {
            get {
                return this.artistField;
            }
            set {
                if ((object.ReferenceEquals(this.artistField, value) != true)) {
                    this.artistField = value;
                    this.RaisePropertyChanged("artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> guid {
            get {
                return this.guidField;
            }
            set {
                if ((this.guidField.Equals(value) != true)) {
                    this.guidField = value;
                    this.RaisePropertyChanged("guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string year {
            get {
                return this.yearField;
            }
            set {
                if ((object.ReferenceEquals(this.yearField, value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Assignment2App.ServiceReference1.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Assignment2App.ServiceReference1.cd_info))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Assignment2App.ServiceReference1.cd_info))]
    public partial class EntityObject : Assignment2App.ServiceReference1.StructuralObject {
        
        private Assignment2App.ServiceReference1.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Assignment2App.ServiceReference1.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Assignment2App.ServiceReference1.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Assignment2App.ServiceReference1.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Assignment2App.ServiceReference1.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Assignment2App.ServiceReference1.cd_info))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddCD", ReplyAction="http://tempuri.org/IService1/AddCDResponse")]
        System.IAsyncResult BeginAddCD(System.Guid guid, string title, string artist, string year, System.AsyncCallback callback, object asyncState);
        
        void EndAddCD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/ViewInfo", ReplyAction="http://tempuri.org/IService1/ViewInfoResponse")]
        System.IAsyncResult BeginViewInfo(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info> EndViewInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Assignment2App.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ViewInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ViewInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Assignment2App.ServiceReference1.IService1>, Assignment2App.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginAddCDDelegate;
        
        private EndOperationDelegate onEndAddCDDelegate;
        
        private System.Threading.SendOrPostCallback onAddCDCompletedDelegate;
        
        private BeginOperationDelegate onBeginViewInfoDelegate;
        
        private EndOperationDelegate onEndViewInfoDelegate;
        
        private System.Threading.SendOrPostCallback onViewInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddCDCompleted;
        
        public event System.EventHandler<ViewInfoCompletedEventArgs> ViewInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Assignment2App.ServiceReference1.IService1.BeginAddCD(System.Guid guid, string title, string artist, string year, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCD(guid, title, artist, year, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Assignment2App.ServiceReference1.IService1.EndAddCD(System.IAsyncResult result) {
            base.Channel.EndAddCD(result);
        }
        
        private System.IAsyncResult OnBeginAddCD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid guid = ((System.Guid)(inValues[0]));
            string title = ((string)(inValues[1]));
            string artist = ((string)(inValues[2]));
            string year = ((string)(inValues[3]));
            return ((Assignment2App.ServiceReference1.IService1)(this)).BeginAddCD(guid, title, artist, year, callback, asyncState);
        }
        
        private object[] OnEndAddCD(System.IAsyncResult result) {
            ((Assignment2App.ServiceReference1.IService1)(this)).EndAddCD(result);
            return null;
        }
        
        private void OnAddCDCompleted(object state) {
            if ((this.AddCDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCDAsync(System.Guid guid, string title, string artist, string year) {
            this.AddCDAsync(guid, title, artist, year, null);
        }
        
        public void AddCDAsync(System.Guid guid, string title, string artist, string year, object userState) {
            if ((this.onBeginAddCDDelegate == null)) {
                this.onBeginAddCDDelegate = new BeginOperationDelegate(this.OnBeginAddCD);
            }
            if ((this.onEndAddCDDelegate == null)) {
                this.onEndAddCDDelegate = new EndOperationDelegate(this.OnEndAddCD);
            }
            if ((this.onAddCDCompletedDelegate == null)) {
                this.onAddCDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCDCompleted);
            }
            base.InvokeAsync(this.onBeginAddCDDelegate, new object[] {
                        guid,
                        title,
                        artist,
                        year}, this.onEndAddCDDelegate, this.onAddCDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Assignment2App.ServiceReference1.IService1.BeginViewInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginViewInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info> Assignment2App.ServiceReference1.IService1.EndViewInfo(System.IAsyncResult result) {
            return base.Channel.EndViewInfo(result);
        }
        
        private System.IAsyncResult OnBeginViewInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Assignment2App.ServiceReference1.IService1)(this)).BeginViewInfo(callback, asyncState);
        }
        
        private object[] OnEndViewInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info> retVal = ((Assignment2App.ServiceReference1.IService1)(this)).EndViewInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnViewInfoCompleted(object state) {
            if ((this.ViewInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ViewInfoCompleted(this, new ViewInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ViewInfoAsync() {
            this.ViewInfoAsync(null);
        }
        
        public void ViewInfoAsync(object userState) {
            if ((this.onBeginViewInfoDelegate == null)) {
                this.onBeginViewInfoDelegate = new BeginOperationDelegate(this.OnBeginViewInfo);
            }
            if ((this.onEndViewInfoDelegate == null)) {
                this.onEndViewInfoDelegate = new EndOperationDelegate(this.OnEndViewInfo);
            }
            if ((this.onViewInfoCompletedDelegate == null)) {
                this.onViewInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnViewInfoCompleted);
            }
            base.InvokeAsync(this.onBeginViewInfoDelegate, null, this.onEndViewInfoDelegate, this.onViewInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Assignment2App.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<Assignment2App.ServiceReference1.IService1>, Assignment2App.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<Assignment2App.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddCD(System.Guid guid, string title, string artist, string year, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = guid;
                _args[1] = title;
                _args[2] = artist;
                _args[3] = year;
                System.IAsyncResult _result = base.BeginInvoke("AddCD", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddCD(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddCD", _args, result);
            }
            
            public System.IAsyncResult BeginViewInfo(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ViewInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info> EndViewInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info> _result = ((System.Collections.ObjectModel.ObservableCollection<Assignment2App.ServiceReference1.cd_info>)(base.EndInvoke("ViewInfo", _args, result)));
                return _result;
            }
        }
    }
}
